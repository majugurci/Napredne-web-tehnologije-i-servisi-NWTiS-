/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.majugurci.web.zrna;

import java.math.BigDecimal;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.ejb.EJB;
import javax.ejb.EJBException;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.foi.nwtis.majugurci.ejb.eb.MajugurciGrupe;
import org.foi.nwtis.majugurci.ejb.eb.MajugurciKorisnici;
import org.foi.nwtis.majugurci.ejb.sb.MajugurciGrupeFacade;
import org.foi.nwtis.majugurci.ejb.sb.MajugurciKorisniciFacade;

/**
 *
 * @author Mario
 */
@ManagedBean
@RequestScoped
public class RegistracijaObrada {
    @EJB
    private MajugurciGrupeFacade majugurciGrupeFacade;

    @EJB
    private MajugurciKorisniciFacade majugurciKorisniciFacade;

    private String korisnickoIme;
    private String lozinka;
    private String ponovljenaLozinka;

    /**
     * Creates a new instance of RegistracijaObrada
     */
    public RegistracijaObrada() {
    }

    public String getKorisnickoIme() {
        return korisnickoIme;
    }

    public void setKorisnickoIme(String korisnickoIme) {
        this.korisnickoIme = korisnickoIme;
    }

    public String getLozinka() {
        return lozinka;
    }

    public void setLozinka(String lozinka) {
        this.lozinka = lozinka;
    }

    public String getPonovljenaLozinka() {
        return ponovljenaLozinka;
    }

    public void setPonovljenaLozinka(String ponovljenaLozinka) {
        this.ponovljenaLozinka = ponovljenaLozinka;
    }

    public String obradiRegistraciju() {
        FacesContext fc = FacesContext.getCurrentInstance();

        if (korisnickoIme.trim().equals("") || lozinka.trim().equals("")
                || ponovljenaLozinka.trim().equals("")) {
            fc.addMessage(null, new FacesMessage("Morate ispuniti sva polja!"));
            return "ERROR";
        }

        if (!lozinka.equals(ponovljenaLozinka)) {
            fc.addMessage(null, new FacesMessage("Lozinka i ponovljena lozinka nisu iste!"));
            return "ERROR";
        }

        //TODO posalji zahtjev na socket server
        
        
        
        List<MajugurciKorisnici> mkList = majugurciKorisniciFacade.findByKorisnik(korisnickoIme);

        if (mkList.size() == 0) {
            MajugurciKorisnici mk = new MajugurciKorisnici();
            mk.setKorisnickoIme(korisnickoIme);
            mk.setLozinka(lozinka);
            mk.setVrijemeRegistracije(new Date());
            
            MajugurciGrupe mg = majugurciGrupeFacade.findByGrupa("korisnik").get(0);
            mk.setGrupa(mg);
            
            mk.setSredstva(new BigDecimal(0));
            mk.setPrvaPrijava(1);
            
            majugurciKorisniciFacade.create(mk);

        } else {
            fc.addMessage(null, new FacesMessage("Korisniƒçko ime je zauzeto"));
            return "ERROR";
        }

        return "OK";
    }

}
